<?php

/**
 * Implements hook_theme().
 *
 * Define custom theme hooks
 */
function gsb_public_custom_blocks_theme($existing, $type , $theme, $path) {

  return array(
    'gsb_public_custom_blocks_virtual_tour' => array(
      'template' => 'virtual_tour/templates/gsb-public-custom-blocks-virtual-tour',
      'file' => 'virtual_tour/virtual_tour.theme.inc',
    ),
    'gsb_public_custom_blocks_map_link' => array(
      'variables' => array('text' => ''),
      'template' => 'map_link/templates/gsb-public-custom-blocks-map-link',
      'file' => 'map_link/map_link.theme.inc',
    ),
    'gsb_public_custom_blocks_rethink' => array(
      'template' => 'rethink/templates/gsb-public-custom-blocks-rethink',
      'file' => 'rethink/rethink.theme.inc',
    ),
    'gsb_public_custom_blocks_follow_us' => array(
      'template' => 'follow_us/templates/gsb-public-custom-blocks-follow-us',
      'file' => 'follow_us/follow_us.theme.inc',
    ),
    'gsb_public_custom_blocks_enews_signup' => array(
      'template' => 'enews_signup/templates/gsb-public-custom-blocks-enews-signup',
      'file' => 'enews_signup/enews_signup.theme.inc',
    ),
    'gsb_public_custom_blocks_about_campus' => array(
      'template' => 'about_campus/templates/gsb-public-custom-blocks-about-campus',
      'file' => 'about_campus/about_campus.theme.inc',
    ),
  );
}

/**
 * Implementation of hook_block_info()
 *
 */
function gsb_public_custom_blocks_block_info() {
  return array(
    'gpcb_virtual_tour' => array(
      'info' => t('Custom CTA: Virtual Tour'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_maps_parking_info_more' => array(
      'info' => t('Custom CTA: Get Directions, Parking Info, and More'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_plan_your_visit' => array(
      'info' => t('Custom CTA: Plan Your Visit'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_visit_us' => array(
      'info' => t('Custom CTA: Visit Us'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_rethink' => array(
      'info' => t('Custom CTA: Rethink'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_follow_us' => array(
      'info' => t('Custom CTA: Follow Us'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_enews_signup' => array(
      'info' => t('Custom CTA: eNews Signup'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_banner_tagline' => array(
      'info' => t('Banner tagline'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_banner_title' => array(
      'info' => t('Banner title'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_breadcrumbs' => array(
      'info' => t('Breadcrumbs'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_about_campus' => array(
      'info' => t('Custom CTA: Learn About Our Campus'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gpcb_last_updated' => array(
      'info' => t('Last updated date'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
    'gsb_featured_event' => array(
      'info' => t('GSB Featured Event'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
  );
}

/**
 * Implementation of hook_block_view
 *
 * Define callbacks for block display
 *
 */
function gsb_public_custom_blocks_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'gpcb_virtual_tour':
      $block['content'] = theme('gsb_public_custom_blocks_virtual_tour');
      break;
    case 'gpcb_maps_parking_info_more':
      $block['content'] = theme('gsb_public_custom_blocks_map_link', array('text' => 'Get Directions, Parking Info, and More'));
      break;
    case 'gpcb_plan_your_visit':
      $block['content'] = theme('gsb_public_custom_blocks_map_link', array('text' => 'Plan Your Visit'));
      break;
    case 'gpcb_visit_us':
      $block['content'] = theme('gsb_public_custom_blocks_map_link', array('text' => 'Visit Us'));
      break;
    case 'gpcb_rethink':
      $block['content'] = theme('gsb_public_custom_blocks_rethink');
      break;
    case 'gpcb_follow_us':
      $block['content'] = theme('gsb_public_custom_blocks_follow_us');
      break;
    case 'gpcb_enews_signup':
      $block['content'] = theme('gsb_public_custom_blocks_enews_signup');
      break;
    case 'gpcb_about_campus':
      $block['content'] = theme('gsb_public_custom_blocks_about_campus');
      break;

    case 'gpcb_banner_tagline':
      $block['content']['tagline'] = array(
        '#type' => 'container',
        '#attributes' => array(
          'class' => array(
            'banner-subtitle',
          ),
        ),
        '#children' => variable_get('gpcb_banner_tagline_value', ''),
      );
      break;

    case 'gpcb_banner_title':
      $block['content']['title'] = array(
        '#type' => 'container',
        '#attributes' => array(
          'class' => array(
            'banner-title',
          ),
        ),
        '#children' => drupal_get_title(),
      );
      break;

    case 'gpcb_breadcrumbs':
      $block['content'] = array(
        '#theme' => 'breadcrumb',
        '#breadcrumb' => drupal_get_breadcrumb(),
      );
      break;
    case 'gpcb_last_updated':
      $node = menu_get_object('node');
      if (!empty($node)) {
        $last_updated_date = format_date($node->changed, 'medium');
        $block['content'] = '<b>Last Updated</b> ' . $last_updated_date;
      }
      break;
    case 'gsb_featured_event':
      $content = '';
      if ($nid = variable_get('feature_flag_event', 0)) {
        $node = node_load($nid);
        if ($node) {
          $content = node_view($node, 'featured');
        }
      }
      $block['content'] = $content;
      break;
  }

  return $block;
}

/**
 * Implements hook_block_configure().
 */
function gsb_public_custom_blocks_block_configure($delta = '') {
  $form = array();

  switch ($delta) {
    case 'gpcb_banner_tagline':
      $form['gpcb_banner_tagline_value'] = array(
        '#type' => 'textfield',
        '#title' => t('Banner tagline text'),
        '#default_value' => variable_get('gpcb_banner_tagline_value', ''),
      );
      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function gsb_public_custom_blocks_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'gpcb_banner_tagline':
      variable_set('gpcb_banner_tagline_value', $edit['gpcb_banner_tagline_value']);
      break;
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function gsb_public_custom_blocks_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools') {
    return "plugins/$plugin_type";
  }
}

/**
 * Helper function that generates render array for vertical tabs
 */
function _gsb_public_custom_blocks_generate_tabs($tabs) {
  $content['#groups']['group_tabs'] = new stdClass();
  $content['#groups']['group_tabs']->group_name = 'group';
  $content['#groups']['group_tabs']->format_type = 'tabs';
  $content['#pre_render'][] = 'field_group_build_pre_render';
  $content['#entity_type'] = 'block';
  $content['#bundle'] = 'tabs';
  $content['#groups']['group_tabs']->weight = 0;

  foreach ($tabs as $key => $val) {
    $group = 'group_tab' . $key;
    $content['#groups'][$group] = new stdClass();
    $content['#groups'][$group]->group_name = $key;
    $content['#groups'][$group]->format_type = 'tab';
    $content['#groups'][$group]->format_settings['formatter'] = 'closed';
    $content['#groups'][$group]->format_settings['instance_settings']['classes'] = 'resp-tab-content';
    $content['#groups'][$group]->children[] = $group;
    $content['#groups'][$group]->label = $val['title'];
    $content['#groups'][$group]->weight = (int)$key;
    $content['#groups']['group_tabs']->children[] = $group;
    $content['#group_children'][$group] = 'group_tabs';
    $content['#group_children'][$key] = $group;
    $content[$key] = $tabs[$key];
  }
  $content['#fieldgroups'] = $content['#groups'];
  return $content;
}

function gsb_public_custom_blocks_gsb_fpp_customizations_icons_alter(&$icons) {
  $module_path = drupal_get_path('module', 'gsb_public_custom_blocks');
  $icons_settings = array(
    'homepage_social_feed:homepage_social_feed' => 'homepage_social_feed.png',
    'lastname_az_links:lastname_az_links' => 'lastname_az_links.png',
    'media_toolkit:media_toolkit' => 'media_toolkit.png',
    'program_finder:program_finder' => 'program_finder.png',
    'program_links:program_links' => 'program_links.png',
  );
  foreach($icons_settings as $key => $value) {
    if (isset($icons[$key]['icon'])) {
      $icons[$key]['icon'] = $module_path . '/images/' . $value;
    }
  }
}

